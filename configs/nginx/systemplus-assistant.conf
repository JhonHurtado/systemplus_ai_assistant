# Nginx configuration for SystemPlus AI Assistant

server {
    listen 80;
    server_name asistente.systemplus.systems;
    
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name asistente.systemplus.systems;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/asistente.systemplus.systems/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/asistente.systemplus.systems/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    
    # Security Headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https://systemplus.systems;";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Logs
    access_log /var/log/nginx/systemplus-assistant-access.log;
    error_log /var/log/nginx/systemplus-assistant-error.log;
    
    # Root Directory
    root /var/www/assistant-prod;
    
    # Proxy Settings for API
    location /api/ {
        proxy_pass http://localhost:3000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Static Files
    location / {
        try_files $uri $uri/ =404;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
        
        # Cache widget.min.js specifically with shorter expiry
        location = /dist/widget.min.js {
            expires 1d;
            add_header Cache-Control "public, no-transform";
        }
    }
    
    # Error Pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# Development server configuration
server {
    listen 443 ssl;
    server_name dev.systemplus.systems;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/dev.systemplus.systems/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.systemplus.systems/privkey.pem;
    
    # Security and other settings similar to production
    # ...
    
    # Root Directory (development)
    root /var/www/assistant-dev;
    
    # Same proxy and location settings as production
    # ...
}

# Staging server configuration
server {
    listen 443 ssl;
    server_name staging.systemplus.systems;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/staging.systemplus.systems/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/staging.systemplus.systems/privkey.pem;
    
    # Security and other settings similar to production
    # ...
    
    # Root Directory (staging)
    root /var/www/assistant-staging;
    
    # Same proxy and location settings as production
    # ...
}